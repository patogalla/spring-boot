plugins {
	id 'org.asciidoctor.convert' version '1.5.3'
	id 'org.springframework.boot' version '2.1.5.RELEASE'
	id 'java'
}

apply plugin: 'io.spring.dependency-management'

group = 'com.patogalla'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
	set('springCloudVersion', "Greenwich.SR2")
}

def versions = [
		aws				: "1.11.415",
		google			: "1.30.2",
		guava           : "20.0",
		jjwt            : "0.7.0",
		jmustache		: "1.14",
        junit           : "5.5.1",
		modelmapper		: "2.3.2",
		springfox       : "2.9.2"
]

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.springframework.cloud:spring-cloud-starter-aws'
//	implementation 'org.springframework.cloud:spring-cloud-starter-aws-jdbc'
	implementation 'org.springframework.cloud:spring-cloud-starter-aws-messaging'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'


	compile group: 'com.amazonaws', name: 'aws-java-sdk-ses', version: "${versions.aws}"


	// UTILS
	compile("com.google.guava:guava:${versions.guava}")
	compile("org.modelmapper:modelmapper:${versions.modelmapper}")
	compile group: 'com.samskivert', name: 'jmustache', version: "${versions.jmustache}"


	// DOCS
	compile group: 'io.springfox', name: 'springfox-swagger2', version: "${versions.springfox}"
	compile group: 'io.springfox', name: 'springfox-swagger-ui', version: "${versions.springfox}"
	compile "io.springfox:springfox-bean-validators:${versions.springfox}"

	/** Security **/
	compile("io.jsonwebtoken:jjwt:${versions.jjwt}")

	/** Google **/
	compile "com.google.api-client:google-api-client:${versions.google}"


	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'org.springframework.security:spring-security-test'

    testCompile "org.junit.jupiter:junit-jupiter-engine:${versions.junit}"

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	outputs.dir snippetsDir
}

asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}
